package com.saiteja.user_service.dto;

import java.util.Set;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import lombok.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Schema(description = "User creation request payload")
public class UserRequestDTO {

	public String getFirstname() {
		return firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public String getLastname() {
		return lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public Set<String> getRoles() {
		return roles;
	}

	public void setRoles(Set<String> roles) {
		this.roles = roles;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public double getBalance() {
		return balance;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	@NotBlank(message = "First name is required")
	@Schema(description = "User's first name", example = "Soumya")
	private String firstname;

	@NotBlank(message = "Last name is required")
	@Schema(description = "User's last name", example = "Dev")
	private String lastname;

	@NotBlank(message = "Password is required")
	@Schema(description = "User's password", example = "securePassword123")
	private String password;

	@Email(message = "Email should be valid")
	@NotBlank(message = "Email is required")
	@Schema(description = "User's email address", example = "soumya@example.com")
	private String email;

	// ✅ FIX: Renamed 'role' → 'roles'
	@Schema(description = "User roles", example = "[\"USER\", \"ADMIN\"]")
	private Set<String> roles;

	@Schema(description = "User's city", example = "Hyderabad")
	private String city;

	@Schema(description = "User's country", example = "India")
	private String country;

	@Schema(description = "Initial account balance", example = "1000.0")
	private double balance;
}
